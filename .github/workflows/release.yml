name: Releases

on:
  push:
    branches:
      - release
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  init:
    name: Initialize
    runs-on: ubuntu-latest
    steps:
      - name: Working Branch
        run: echo Running on branch ${GITHUB_REF_NAME}
    
  get-auth-token:
    needs: init
    name: Get authorization token
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: get-authorization-token
        env:
          AWS_MNL_ACCOUNT: ${{ secrets.AWS_MNL_ACCOUNT }}
        run: |
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain coherent-global --domain-owner $AWS_MNL_ACCOUNT --query authorizationToken --output text`
          cat <<EOF >> .npmrc
          registry=https://registry.npmjs.org
          @coherentglobal:registry=https://coherent-global-$AWS_MNL_ACCOUNT.d.codeartifact.ap-southeast-1.amazonaws.com/npm/coherent-global/
          //coherent-global-$AWS_MNL_ACCOUNT.d.codeartifact.ap-southeast-1.amazonaws.com/npm/coherent-global/:always-auth=true
          //coherent-global-$AWS_MNL_ACCOUNT.d.codeartifact.ap-southeast-1.amazonaws.com/npm/coherent-global/:_authToken=${CODEARTIFACT_AUTH_TOKEN}
          EOF
      - uses: actions/upload-artifact@v3
        with:
          name: npmrc
          path: .npmrc

  build-publish:
    needs: [init,get-auth-token]
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download .npmrc file
        uses: actions/download-artifact@v3
        with:
          name: npmrc
      - name: Install dependencies
        run: yarn install --no-lockfile
      - name: Set tags
        run: |
          echo "TAG=tag-${GITHUB_REF_NAME}" >> $GITHUB_ENV
      - name: Set image tags
        run: |
          echo "IMAGE_TAGS=${GITHUB_REF_NAME},${{ env.TAG }}" >> $GITHUB_ENV
      - name: Publish docker image to AWS ECR
        uses: kciter/aws-ecr-action@v3
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: ${{ secrets.AWS_ECR_REPOSITORY }}
          region: ${{ secrets.AWS_REGION }}
          tags: ${{ env.IMAGE_TAGS }}
